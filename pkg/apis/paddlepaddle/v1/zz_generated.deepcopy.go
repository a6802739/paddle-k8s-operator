// +build !ignore_autogenerated

// Copyright 2019 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package v1

import (
	batch_v1 "k8s.io/api/batch/v1"
	core_v1 "k8s.io/api/core/v1"
	v1beta1 "k8s.io/api/extensions/v1beta1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	reflect "reflect"
)

// GetGeneratedDeepCopyFuncs returns the generated funcs, since we aren't registering them.
//
// Deprecated: deepcopy registration will go away when static deepcopy is fully implemented.
func GetGeneratedDeepCopyFuncs() []conversion.GeneratedDeepCopyFunc {
	return []conversion.GeneratedDeepCopyFunc{
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*PserverSpec).DeepCopyInto(out.(*PserverSpec))
			return nil
		}, InType: reflect.TypeOf(&PserverSpec{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*TrainerSpec).DeepCopyInto(out.(*TrainerSpec))
			return nil
		}, InType: reflect.TypeOf(&TrainerSpec{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*PaddleJob).DeepCopyInto(out.(*PaddleJob))
			return nil
		}, InType: reflect.TypeOf(&PaddleJob{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*PaddleJobList).DeepCopyInto(out.(*PaddleJobList))
			return nil
		}, InType: reflect.TypeOf(&PaddleJobList{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*PaddleJobSpec).DeepCopyInto(out.(*PaddleJobSpec))
			return nil
		}, InType: reflect.TypeOf(&PaddleJobSpec{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*PaddleJobStatus).DeepCopyInto(out.(*PaddleJobStatus))
			return nil
		}, InType: reflect.TypeOf(&PaddleJobStatus{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*TrainingResourceStatus).DeepCopyInto(out.(*TrainingResourceStatus))
			return nil
		}, InType: reflect.TypeOf(&TrainingResourceStatus{})},
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PserverSpec) DeepCopyInto(out *PserverSpec) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ReplicaSpec != nil {
		in, out := &in.ReplicaSpec, &out.ReplicaSpec
		if *in == nil {
			*out = nil
		} else {
			*out = new(v1beta1.ReplicaSet)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PserverSpec.
func (in *PserverSpec) DeepCopy() *PserverSpec {
	if in == nil {
		return nil
	}
	out := new(PserverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainerSpec) DeepCopyInto(out *TrainerSpec) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ReplicaSpec != nil {
		in, out := &in.ReplicaSpec, &out.ReplicaSpec
		if *in == nil {
			*out = nil
		} else {
			*out = new(batch_v1.Job)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainerSpec.
func (in *TrainerSpec) DeepCopy() *TrainerSpec {
	if in == nil {
		return nil
	}
	out := new(TrainerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PaddleJob) DeepCopyInto(out *PaddleJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PaddleJob.
func (in *PaddleJob) DeepCopy() *PaddleJob {
	if in == nil {
		return nil
	}
	out := new(PaddleJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PaddleJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PaddleJobList) DeepCopyInto(out *PaddleJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PaddleJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PaddleJobList.
func (in *PaddleJobList) DeepCopy() *PaddleJobList {
	if in == nil {
		return nil
	}
	out := new(PaddleJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PaddleJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PaddleJobSpec) DeepCopyInto(out *PaddleJobSpec) {
	*out = *in
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]core_v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]core_v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Pserver.DeepCopyInto(&out.Pserver)
	in.Trainer.DeepCopyInto(&out.Trainer)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PaddleJobSpec.
func (in *PaddleJobSpec) DeepCopy() *PaddleJobSpec {
	if in == nil {
		return nil
	}
	out := new(PaddleJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PaddleJobStatus) DeepCopyInto(out *PaddleJobStatus) {
	*out = *in
	if in.ReplicaStatuses != nil {
		in, out := &in.ReplicaStatuses, &out.ReplicaStatuses
		*out = make([]*TrainingResourceStatus, len(*in))
		for i := range *in {
			if (*in)[i] == nil {
				(*out)[i] = nil
			} else {
				(*out)[i] = new(TrainingResourceStatus)
				(*in)[i].DeepCopyInto((*out)[i])
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PaddleJobStatus.
func (in *PaddleJobStatus) DeepCopy() *PaddleJobStatus {
	if in == nil {
		return nil
	}
	out := new(PaddleJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingResourceStatus) DeepCopyInto(out *TrainingResourceStatus) {
	*out = *in
	if in.ResourceStates != nil {
		in, out := &in.ResourceStates, &out.ResourceStates
		*out = make(map[ResourceState]int, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingResourceStatus.
func (in *TrainingResourceStatus) DeepCopy() *TrainingResourceStatus {
	if in == nil {
		return nil
	}
	out := new(TrainingResourceStatus)
	in.DeepCopyInto(out)
	return out
}
